package com.nt.service;


import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.List;

import org.apache.commons.io.FilenameUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.multipart.MultipartFile;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.nt.model.User;
import com.nt.repo.SpringReadFileRepository;
import com.opencsv.CSVReader;
import com.opencsv.CSVReaderBuilder;

import ch.qos.logback.core.html.CssBuilder;

@Service
@Transactional
public class SpringReadFileServiceImpl implements SpringReadFileService {

	    @Autowired
	    private SpringReadFileRepository repository;

		@Override
		public List<User> findAll() {
			List<User> users=(List<User>) repository.findAll();
			return users;
		}

		@Override
		public boolean saveDataFromUploadFile(MultipartFile file) {
            boolean isflag=false;
            String extension=FilenameUtils.getExtension(file.getOriginalFilename());
            
            if(extension.equalsIgnoreCase("json")) {
            	isflag=readDataFromJson(file);
            }else if(extension.equalsIgnoreCase("csv")) {
            	isflag=readDataFromCsv(file);
            }
			return isflag;
		}

		private boolean readDataFromCsv(MultipartFile file) {

			try {
				InputStreamReader reader=new InputStreamReader(file.getInputStream());
                CSVReader csvReader=new CSVReaderBuilder(reader).withSkipLines(1).build();
                List<String[]> rows=csvReader.readAll();
                for (String[] row : rows) {
					  repository.save(new User(row[0],row[1], row[2],row[3],FilenameUtils.getExtension(file.getOriginalFilename())));
				}
				return true;
			} catch (Exception e) {
				return false;
			}
			
		}

		private boolean readDataFromJson(MultipartFile file) {
            try {
				InputStream inputStream=file.getInputStream();
				ObjectMapper mapper=new ObjectMapper();
				List<User> users=Arrays.asList(mapper.readValue(inputStream, User[].class));
				if(users!=null &&users.size()!=0) {
					   for (User user : users) {
						    user.setFileType(FilenameUtils.getExtension(file.getOriginalFilename()));
						    repository.save(user);
					}
				}
            	return true;
			} catch (Exception e) {
				return false;
			}
			
		}
	    
	    
}
